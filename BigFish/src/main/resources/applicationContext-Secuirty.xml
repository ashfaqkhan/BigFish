<?xml version="1.0" encoding="UTF-8"?> 
<beans xmlns="http://www.springframework.org/schema/beans" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:security="http://www.springframework.org/schema/security" 
xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
http://www.springframework.org/schema/security 
http://www.springframework.org/schema/security/spring-security-3.1.xsd"> 
      
    <security:http auto-config="true" use-expressions="true" >
            
       	<security:intercept-url pattern="/css/*" access="permitAll"/> 
	  	<security:intercept-url pattern="/javascript/*" access="permitAll"/> 
		<security:intercept-url pattern="/images/*" access="permitAll"/> 
		<security:intercept-url pattern="/homeLink.action" access="permitAll"/> 
		<security:intercept-url pattern="/login/index.action" access="permitAll"/>
		<security:intercept-url pattern="/login/loginController.action?message=success" access="hasAnyRole('ROLE_DEVELOPER','ROLE_QA','ROLE_MANAGER','ROLE_LEAD','ROLE_BUSINESS','ROLE_DBA')"/>
		
		<security:intercept-url pattern="/dev/**" access="hasRole('ROLE_DEVELOPER')"  />
		<security:intercept-url pattern="/qa/**" access="hasRole('ROLE_QA')"  />
		<security:intercept-url pattern="/mgr/**" access="hasRole('ROLE_MANAGER')"  />
		<security:intercept-url pattern="/led/**" access="hasRole('ROLE_LEAD')"  />
		<security:intercept-url pattern="/bus/**" access="hasRole('ROLE_BUSINESS')"  />
		<security:intercept-url pattern="/dba/**" access="hasRole('ROLE_DBA')"  />
						
		 <!-- Override default login and logout pages -->
        <security:form-login login-page="/login" 
                             default-target-url="/login/loginController.action?message=success" 
                             authentication-failure-url="/login/loginController.action?message=invalid" />
        
       	<security:logout invalidate-session="true" logout-success-url="/login/loginController.action?message=logout" />
				        							
		<security:remember-me key="bigfish-security" services-ref="rememberMeServices"/> 
	
	</security:http> 
	
		
	<bean class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" id="passwordEncoder"/> 
		
	 <bean id="customjdbcUserService" class="com.tcs.bigfish.service.user.CustomUserJDBCService">
    	<property name="dataSource" ref="dataSource"/> 
    	<property name="enableAuthorities" value="true"/> 
    	<property name="usersByUsernameQuery"> 
		<value>SELECT username, password, isActive FROM bigfishuser WHERE username = ? and isActive='1'</value>
		</property> 
		<property name="authoritiesByUsernameQuery"> 
				<value>select username, rolename from bigfishuser bg , userrole ur where bg.userid = ur.userid and bg.username=?</value> 
		</property> 
	</bean> 
			
	 <bean id="rememberMeServices" class="org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices">
		 <property name="key" value="bigfish-security" />  
		 <property  name="userDetailsService" ref="customjdbcUserService" />  
		 <property  name="alwaysRemember" value="true" />  
		 <property  name="tokenValiditySeconds" value="60" />  
	 </bean> 
	  
	  <bean id="rememberMeAuthenticationProvider"  class="org.springframework.security.authentication.RememberMeAuthenticationProvider">  
	       <property name="key" value="bigfish-security"/>  
	  </bean>  
	  
	  <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="authenticationProvider" />
      </security:authentication-manager>
	  
	  
	  <security:authentication-manager alias="authenticationManager"> 
	    <security:authentication-provider user-service-ref="customjdbcUserService">
	   		  <!-- <security:password-encoder ref="passwordEncoder"/> -->
	    </security:authentication-provider> 
	    <security:authentication-provider ref="rememberMeAuthenticationProvider"/> 
	  </security:authentication-manager> 
	
	  <!--   
	  <bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
    		<property name="userDetailsService" ref="customjdbcUserService" />
   			<property name="passwordEncoder"  ref="passwordEncoder" /> 
      </bean> -->
	  
	   <bean id="rememberMeFilter" class="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
		  <property name="rememberMeServices" ref="rememberMeServices"/> 
		  <property name="authenticationManager" ref="authenticationManager" /> 
	  </bean>
	  
	  <bean id="loginService" name="loginService" class="com.tcs.bigfish.service.login.LoginService" scope="prototype">  
        <property name="authenticationManager" ref="authenticationManager"></property>  
        <property name="rememberMeServices" ref="rememberMeServices"></property>  
		<property name="userDetailsService" ref="customjdbcUserService"></property>  
    </bean> 
	
	  
</beans>    
    
